version: '3'

services:
  db:
    build:
      context: db
      dockerfile: Dockerfile
    restart: always
    container_name: db
    ports: 
      - "5432:5432"
    environment:
      POSTGRES_DB: mydatabase
      POSTGRES_USER: myuser
      POSTGRES_PASSWORD: mypassword
    volumes: 
      - ./db/init.sql:/docker-entrypoint-initdb.d/init.sql
      - db:/var/lib/postgresql/data
  
  api:
    build:
      context: api
      dockerfile: Dockerfile
    container_name: api
    network_mode: "host"
    restart: always
    command: python3 api/app.py
    environment:
      MINIO_ENDPOINT: http://127.0.0.1:9000
      ACCESS_KEY: minio_user
      SECRET_KEY: minio_password
    volumes:
      - ./api:/app
    working_dir: /app
    depends_on: 
      - db

  minio:

    image: quay.io/minio/minio:RELEASE.2024-01-13T07-53-03Z
    command: server /content
    hostname: minio
    container_name: minio
    volumes:
      - content:/content
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      MINIO_ROOT_USER: 'minio_user'
      MINIO_ROOT_PASSWORD: 'minio_password'
      MINIO_ADDRESS: ':9000'
      MINIO_CONSOLE_ADDRESS: ':9001'
    restart: always
    

  createbucket:
    image: minio/mc:latest
    depends_on:
      - minio
    entrypoint: >
      /bin/sh -c "
      mc config host add --api s3v4 mymio http://minio:9000 minio_user minio_password;
      mc mb mymio/temp/;
      mc anonymous set public mymio/temp;
      "

volumes:
  db:
    driver: local
  content:
    driver: local
